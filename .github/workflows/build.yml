name: Build Telegram-X

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build Telegram-X
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 33
          build-tools: '33.0.2'

      - name: Create local.properties
        run: |
          echo "telegram.api_id=${{ secrets.TELEGRAM_API_ID }}" >> $GITHUB_WORKSPACE/local.properties
          echo "telegram.api_hash=${{ secrets.TELEGRAM_API_HASH }}" >> $GITHUB_WORKSPACE/local.properties
          echo "sdk.dir=$ANDROID_SDK_ROOT" >> $GITHUB_WORKSPACE/local.properties
          echo "keystore.file=${{ secrets.KEYSTORE_FILE }}" >> $GITHUB_WORKSPACE/local.properties
          echo "keystore.password=${{ secrets.KEYSTORE_PASSWORD }}" >> $GITHUB_WORKSPACE/local.properties
          echo "key.alias=${{ secrets.KEY_ALIAS }}" >> $GITHUB_WORKSPACE/local.properties
          echo "key.password=${{ secrets.KEY_PASSWORD }}" >> $GITHUB_WORKSPACE/local.properties

      - name: Initialize git submodules
        run: git submodule update --init --recursive

      - name: Set executable permissions for setup script
        run: chmod +x scripts/setup.sh

      - name: Run setup script
        run: |
          export TERM=xterm
          ./scripts/setup.sh

      - name: Verify third-party libraries
        run: |
          ls -al app/jni/third_party/opus
          ls -al app/jni/third_party/ffmpeg
          ls -al app/jni/third_party/libvpx

      - name: Build project
        run: ./gradlew assembleUniversalRelease
